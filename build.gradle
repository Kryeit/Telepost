plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven {
        name = 'GriefDefender'
        url = 'https://repo.glaremasters.me/repository/bloodshot'
    }
    maven {
        name = 'LuckPerms'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name = 'Translations API'
        url = 'https://maven.nucleoid.xyz'
    }
    maven {
        name = 'WorldEdit'
        url = 'https://maven.enginehub.org/repo/'
    }
    maven {
        name = "BlueMap"
        url = 'https://jitpack.io'
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "telepost" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation "org.iq80.leveldb:leveldb:${leveldb_version}"
    compileOnly "com.griefdefender:api:${griefdefender_version}"
    include(modImplementation("me.lucko:fabric-permissions-api:${luckperms_version}"))
    modImplementation include("xyz.nucleoid:server-translations-api:${servertranslations_version}")
    modImplementation "com.sk89q.worldedit:worldedit-fabric-mc${worldedit_version}"
    compileOnly "com.github.BlueMap-Minecraft:BlueMapAPI:${bluemap_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
